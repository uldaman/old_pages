author: HanXiao
date: 2015-02-23 05:05
title: 12、[C++] 2014 小结

这段时间过春节,  学习什么的都放下了, 现在总算忙的差不多了, 把之前2014年底学的设计模式做个小结.




## 首先看下我们目前已经学习过的设计模式:




创建型模式: -- 用来处理对象的创建过程


<blockquote>工厂模式 (简单工厂模式严格来说不是设计的一种) : 定义一个用于创建对象的接口, 让子类决定实例化哪一个类, 工厂方法使一个类的实例化延迟到其子类.</blockquote>




<blockquote>原型模式 : 用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象.</blockquote>




结构型模式: -- 用来处理类或者对象的组合


<blockquote>装饰者模式 : 动态地将责任附加到对象上, 若要扩展对象, 装饰者模式提供了比继承更弹性的替代方案.</blockquote>




<blockquote>代理模式 : 为其他对象提供一种代理以控制对这个对象的访问.</blockquote>




行为型模式: -- 用来对类或对象怎样交互和怎样分配职责进行描述


<blockquote>策略模式 : 一种定义一系列算法的行为, 从概念上看, 所有这些算法完成的都是相同的工作, 只是实现不同.</blockquote>




<blockquote>模板方法模式 : 定义一个操作中的算法骨架, 而将具体的步骤实现延迟到子类中.</blockquote>




##





* * *






## 在此之外, 还学习了面向对象设计的六大设计原则其中五项:




单一职责原则


<blockquote>就一个类而言, 应该仅有一个引起它变化的原因.</blockquote>




开放-封闭原则


<blockquote>软件实体(类 模块 函数等等), 应该是可以扩展但不可修改的.</blockquote>




里氏代换原则


<blockquote>子类型必须能够替换掉它们的父类型.</blockquote>




依赖倒转原则


<blockquote>抽象不应该依赖细节, 细节应该依赖于抽象, 高层模块不应该依赖低层模块, 都应该依赖抽象.</blockquote>




迪米特法则


<blockquote>也叫最小知识原则, 迪米特法则还有一个更简单的定义：只与直接的朋友通信.</blockquote>
*
