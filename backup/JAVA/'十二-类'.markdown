author: Martin
date: 2015-06-12 09:46
title: (十二) 类

面向对象、类及对象的概念就不多说了, 和 C++ 一样, 直接来看看 Java 中怎么使用类.

之前讲过: 类是 Java 中的基本单元, 可以在类中定义变量和函数, 同时 Java 也规定了, 所有的变量和函数必须存在于类中.

定义一个类:
权限修饰符 class 类名 {
定义属性(成员变量)
定义方法(成员函数)
}

创建对象: 类名 对象名 = new 类名();
备注: new 后面跟的其实不是类名, 而应该说成构造方法.

Java 类和 C++ 类一样, 也是有构造方法的, 用法也差不多, 不多赘述.

* * *



成员变量和局部变量的区别:

1. 作用域
局部变量仅限定义它的方法;
成员变量在整个类内部都是可见的.

2. 初始值
成员变量默认有一个初始值;
局部变量没有初始值.

3. 当方法内的局部变量和该方法所属类的成员变量重名时, 优化调用局部变量.

* * *

Java 中也是有 static 关键字的, 其作用和 C++ 中的差不多, 不过 java 中除了可能修饰成员属性, 成员方法外, 它还能修饰初始化块, 被称为静态初始化块.

首先, 我们先来看一下什么是初始化块: Java 中可以通过初始化块进行数据赋值.

    <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span><span style="color: #000000"> HelloWorld {
        String name;
        {
            name </span>= "初始化块"<span style="color: #000000">;
        }
    }</span>




在类的声明中, 可以包含多个初始化块, 当创建类的实例时, 就会依次执行这些代码块.




如果使用 static 修饰初始化块, 就称为静态初始化块.


需要特别注意: 静态初始化块只在类加载时执行, 且只会执行一次, 同时静态初始化块只能给静态变量赋值, 不能初始化普通的成员变量.
 na
